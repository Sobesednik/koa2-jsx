{"version":3,"sources":["../src/index.jsx"],"names":["writeDoctype","ctx","res","write","writeHtml","type","status","makeStreamRender","_static","render","renderToStaticNodeStream","renderToNodeStream","WebSite","stream","body","makeStore","reducer","actions","View","next","store","assignContextActions","Content","Object","keys","forEach","key","fn","args","action","dispatch","makeMarkupRender","pretty","renderToStaticMarkup","renderToString","m","s","getRender","config","static","r","Store"],"mappings":"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","sourcesContent":["import { renderToStaticNodeStream, renderToNodeStream, renderToStaticMarkup, renderToString } from 'react-dom/server'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { prettyPrint } from 'html'\n\nexport { default as wireframe } from './wireframe'\nexport { default as bootstrap } from './bootstrap'\n\nconst writeDoctype = (ctx) => ctx.res.write('<!doctype html>\\n')\n\nconst writeHtml = (ctx) => {\n  ctx.type = 'html'\n  ctx.status = 200\n  writeDoctype(ctx)\n}\n\nconst makeStreamRender = (_static) => {\n  const render = _static ? renderToStaticNodeStream : renderToNodeStream\n  return (ctx, WebSite) => {\n    writeHtml(ctx)\n    const stream = render(WebSite)\n    ctx.body = stream\n  }\n}\n\n/**\n * A middleware constructor.\n * @param {function} reducer\n * @param {object} actions\n * @param {function} View\n * @param {function} render\n * @returns {Koa.Middleware}\n */\nconst makeStore = (reducer, actions, View, render) => {\n  return async (ctx, next) => {\n    const store = createStore(reducer)\n    ctx.store = store\n    assignContextActions(actions, ctx, store)\n    await next()\n\n    // so instead of giving you a function to render to include in middleware\n    // chain, I just include render as the very last operation, assuming no\n    // implications but there could be e.g., for error page.\n\n    if (!ctx.Content) {\n      return\n    }\n    const WebSite = (\n      <Provider store={store}>\n        <View>\n          {ctx.Content}\n        </View>\n      </Provider>\n    )\n    render(ctx, WebSite)\n  }\n}\n\n/**\n * Convert action creators from `actions` config into action dispatchers in the\n * context.\n * @param {object} actions\n * @param {object} ctx\n * @param {{dispatch:function}} store\n */\nconst assignContextActions = (actions, ctx, store) => {\n  Object.keys(actions).forEach((key) => {\n    const fn = actions[key]\n    ctx[key] = (...args) => {\n      const action = fn(...args)\n      store.dispatch(action)\n    }\n  })\n}\n\n/**\n * @typedef {Object} Config\n * @property {function} View A Redux connected container.\n * @property {function} [reducer] A root reducer to create the store.\n * @property {Object} [actions] A map of action creators.\n * @property {boolean} [static=true] String React's hydration metadata (default true)\n * @property {boolean} [pretty=false] Render formatted HTML (default false)\n * @property {(ctx, Website) => void} [render] An optional render function for more control in rendering.\n */\n\nconst makeMarkupRender = (_static, pretty) => {\n  const render = _static ? renderToStaticMarkup : renderToString\n  return (ctx, WebSite) => {\n    writeHtml(ctx)\n    const m = render(WebSite)\n    const s = pretty ? prettyPrint(m) : m\n    ctx.body = s\n  }\n}\n\nconst getRender = (_static, pretty) => {\n  if (pretty) return makeMarkupRender(_static, pretty)\n  return makeStreamRender(_static)\n}\n\n/**\n * @param {Config} config\n */\nconst fn = (config = {}) => {\n  const {\n    View,\n    reducer = () => ({}),\n    actions = {},\n    static: _static = true,\n    pretty = false,\n    render = null,\n  } = config\n\n  const r = render || getRender(_static, pretty)\n\n  const Store = makeStore(reducer, actions, View, r)\n  return Store\n}\n\nexport default fn\n"],"file":"index.js"}